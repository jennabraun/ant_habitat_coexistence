#nm <- metaMDS(zero)
#envfit(nm ~ esi +mean.cover + dry.veg.percent + shrub.site + Microsite + var.cover + veg..height + mean.height + Temp,envz, strata = envz$Site, perm = 999)
# m1 <- cca(zero ~ esi +mean.cover + dry.veg.percent + shrub.site + Microsite + var.cover + veg..height + mean.height + Temp + Site,envz, perm = 999)
# summary(m1)
# anova.cca(m1, by = "margin")
cwm.comm <- select(CWM.pres, 2:4)
cwm.comm <- pivot_wider(cwm.comm, names_from = Trait, values_from = cwm)
cwm.comm <- select(cwm.comm, 3,5, 8,9,11, 13, 14)
row.names(cwm.comm) <- cwm.comm$uniID
cwm.comm <- drop_na(cwm.comm)
#hmm why is it 525 though?
#525 because of the missing data in veg height
cwm.zero <- cwm.comm$uniID
#the NAs must be the zero rows
cwm.comm <- ungroup(cwm.comm) %>% select(-uniID)
cwm.env <- select(cov, 1, 2:9, 12, 15, 17, 23, 13, 31, 34)
cwm.env <- cwm.env[cwm.env$uniID %in% cwm.zero, ]
cwm.env <- select(cwm.env, -uniID)
nm.cwm <- metaMDS(cwm.comm)
#m1 <- envfit(nm.cwm ~  esi +mean.cover + dry.veg.percent + shrub.site + Microsite + var.cover + mean.height + Temp, cwm.env, permutations = 9999, strata = cwm.env$Site, na.rm = TRUE)
m1
plot(nm)
ordiplot(m1)
rdaNEspain.all <- rda(cwm.comm ~ esi +mean.cover + dry.veg.percent + shrub.site + Microsite + var.cover + mean.height + Temp, data = cwm.env, permutations = 9999, strata = cwm.env$Site)
plot(rdaNEspain.all, type = "n", scaling = "sites")
text(rdaNEspain.all, dis = "cn", scaling = "sites")
text(rdaNEspain.all, dis = "sp", scaling = "sites", col = "red")
anova.cca(rdaNEspain.all)
anova.cca(rdaNEspain.all, by = "terms")
anova.cca(rdaNEspain.all, by = "margin")
anova.cca(rdaNEspain.all, by = "axis")
rdaNEspain.all
#RDA does not explain much variation at all
#maybe stick with the nmds then?
m2 <- capscale(zero~ arid + esi +mean.cover + dry.veg.percent + shrub.site + Microsite + var.cover + mean.height + Temp + Condition(Site), data = envz, dist = "bray")
m2
summary(m2)
anova.cca(m2, by = "terms", model = "reduced", strata = envz$Site)
anova.cca(m2, by = "margin", model = "reduced", strata = envz$Site)
m1 <- capscale(cwm.comm ~ arid + esi + Temp +mean.cover +dry.veg.percent+ var.cover+ Microsite  + shrub.site + month + Condition(Site), data = cwm.env, dist = "bray")
anova.cca(m1, by = "terms", strata = cwm.env$Site)
anova.cca(m1, by = "axis", strata = cwm.env$Site)
anova.cca(m1, by = "margin", strata = cwm.env$Site)
anova(m1)
m1 <- capscale(cwm.comm ~ arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site + month + Condition(Site), data = cwm.env, dist = "bray")
anova.cca(m1, by = "terms", strata = cwm.env$Site)
anova.cca(m1, by = "margin", strata = cwm.env$Site)
RsquareAdj(m1)$r.squared
m1 <- capscale(cwm.comm ~ arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site +  Condition(Site), data = cwm.env, dist = "bray")
anova.cca(m1, by = "terms", strata = cwm.env$Site)
anova.cca(m1, by = "margin", strata = cwm.env$Site)
euc.esi <- dist(env4$esi, "euclidean")
mantel(euc.esi, sor, method = "spearman", permutations = 99, na.rm = TRUE)
library(betapart)
spe.bin.core <- betapart.core(spe.bin)
spe.bin.multi <- beta.multi(spe.bin)
spe.bin.samp <- beta.sample(spe.bin.core, sites = 9, samples = 100)
dist <- beta.pair(spe.bin, index.family = "sorensen")
bd <- vegan::betadisper(dist[[3]], env4$shrub.site)
boxplot(bd)
anova(bd)
# difference in dispersion between the three
TukeyHSD(bd)
library(FD)
library(vegan)
gow <- gowdis(env4)
euc <- dist(env4, "euclidean")
gow <- as.matrix(gow)
sor <- dist[[3]]
sor <- as.matrix(sor)
sor.mean <- rowMeans(sor, na.rm = TRUE)
sim <- as.matrix(dist[[1]])
sim.mean <- rowMeans(sim, na.rm = TRUE)
sne <- as.matrix(dist[[2]])
sne.mean <- rowMeans(sne, na.rm = TRUE)
envbeta <- cbind(env4, sor.mean, sim.mean, sne.mean)
mb <- glmmTMB(sim.mean ~  arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site + (1|Site), data = envbeta)
shapiro.test(resid(mb))
summary(mb)
summary(mb2)
mb2 <- glmmTMB(sne.mean ~  arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site +(1|Site), data = envbeta)
summary(mb2)
View(spe.bin.core)
mantel(euc.esi, sor, method = "spearman", permutations = 99, na.rm = TRUE)
m5 <- glmmTMB(Species ~ mean.cover +dry.veg.percent  +Microsite  + shrub.site + month + esi +  (1|Site) , family = "poisson", data = cov)
summary(m5)
m5 <- glmmTMB(Species ~ mean.cover +dry.veg.percent  +Microsite  + shrub.site + month + esi + arid + (1|Site) , family = "poisson", data = cov)
summary(m5)
summary(mb)
mantel(euc.esi, sor, method = "spearman", permutations = 99, na.rm = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(performance)
library(glmmTMB)
library(ade4)
library(nlme)
library(ape)
library(vegan)
m1 <- capscale(cwm.comm ~ arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site +  Condition(Site), data = cwm.env, dist = "bray")
summary(m1)
plot.cca(m1)
library(ggvegan)
library(vegan)
plot(m1, type = "n", scaling = "sites")
text(m1, dis = "cn", scaling = "sites")
text(m1, dis = "sp", scaling = "sites", col = "red")
autoplot(m1)
autoplot(m1, scaling = TRUE)
autoplot(m1)
autoplot(m1, scaling = 1)
autoplot(m1, scaling = 2)
autoplot(m1, scaling = 3)
RsquareAdj(m1)$r.squared
m1 <- capscale(cwm.comm ~ arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site + month + Condition(Site), data = cwm.env, dist = "bray")
RsquareAdj(m1)$r.squared
autoplot(m1, scaling = 1)
anova.cca(m1, by = "terms", strata = cwm.env$Site)
m1 <- capscale(cwm.comm ~ arid + esi  +mean.cover +dry.veg.percent+  Microsite + month + Condition(Site), data = cwm.env, dist = "bray")
RsquareAdj(m1)$r.squared
anova.cca(m1, by = "terms", strata = cwm.env$Site)
autoplot(m1, scaling = 1)
anova.cca(m1, by = "margin", strata = cwm.env$Site)
m1 <- capscale(cwm.comm ~ arid + esi  +mean.cover +dry.veg.percent+  Microsite  + Condition(Site), data = cwm.env, dist = "bray")
anova.cca(m1, by = "margin", strata = cwm.env$Site)
RsquareAdj(m1)$r.squared
autoplot(m1, scaling = 1)
cor.test(cwm.env$esi, cwm.env$arid)
plot(cwm.env$esi, cwm.env$arid)
ggplot(cwm.env, aes(esi, arid)) + geom_smooth()
View(cwm.env)
m1.m11 <- glmmTMB(abun ~ dry.veg.percent + Microsite + month + mean.cover + Prec + (1|Site), family = "poisson", data = cov)
summary(m1.m11)
check_overdispersion(m1.m11)
m1.mnb <- glmmTMB(abun ~ dry.veg.percent + Microsite + month + mean.cover + Prec + esi + (1|Site), family = "nbinom2", data = cov)
summary(m1.mnb)
m1.mnb <- glmmTMB(abun ~ dry.veg.percent + Microsite + month + mean.cover + arid + esi + (1|Site), family = "nbinom2", data = cov)
summary(m1.mnb)
m5 <- glmmTMB(Species ~ mean.cover +dry.veg.percent  +Microsite  + shrub.site + month + esi + arid + (1|Site) , family = "poisson", data = cov)
summary(m5)
check_collinearity(m5)
m1.mnb <- glmmTMB(abun ~ dry.veg.percent + Microsite + month + mean.cover + arid + esi + shrub.site + (1|Site), family = "nbinom2", data = cov)
summary(m1.mnb)
v1 <- glmmTMB(dry.veg.percent ~ Microsite + month +  arid + esi + shrub.site + (1|Site), family = "nbinom2", data = cov)
summary(m1)
summary(v1)
ggplot(cov, aes(arid, dry.veg.percent)) + geom_smooth()
ggplot(cov, aes(arid, mean.cover)) + geom_smooth()
View(cov)
View(sites)
v1 <- glmmTMB(dry.veg.percent ~ Microsite + month +  arid * shrub.site + (1|Site), family = "nbinom2", data = cov)
summary(v1)
ggplot(cov, aes(esi, mean.cover)) + geom_smooth()
ggplot(cov, aes(esi, dry.veg.percent)) + geom_smooth()
ggplot(cov, aes(arid, dry.veg.percent)) + geom_smooth()
gow <- as.matrix(gow)
mantel(euc.esi, gow, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.Prec, gow, method = "spearman", permutations = 99, na.rm = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(performance)
library(glmmTMB)
library(ade4)
library(nlme)
library(ape)
library(vegan)
wide <- read.csv("Clean Data/ants_wide.csv")
cov <- read.csv("Clean Data/ants.csv")
sites <- read.csv("Clean Data/sites_joined.csv")
cov <- right_join(sites, cov, by = c("Site", "month"))
cov <- dplyr::select(cov, 3:10, 14:19, 22:36, 39:41)
sum(cov$abun)
#add ecostress sensor data
eco <- read.csv("Clean Data/ecostress.csv")
eco <- select(eco, 1, 2, 11)
eco <- rename(eco, month = Category, Site = ID, esi = ECO4ESIPTJPL_001_Evaporative_Stress_Index_PT_JPL_ESIavg)
cov <- right_join(eco, cov, by = c("Site", "month"))
shrubs <- read.csv("Clean Data/shrubs.csv")
cov <- right_join(cov, shrubs, by = "Site")
cov$shrub.site <- as.factor(cov$shrub.site)
traits <- read.csv("raw data/Traits.csv")
unique(traits$Trait)
#I don't trust the eye width measurements because they were from the front
traits <- filter(traits, Trait != "Eye width")
unique(traits$Photo)
traits <- separate(traits, Photo, c("Site", "Slide", "Specimen"))
traits$Site <- gsub("Papl", "PaPl", traits$Site)
unique(traits$Site)
traits <- traits[-1,]
#remove the double pheidole entry
traits <- traits[-2,]
#need to divide the trait values by weber's body length. I want to do this at the individual level
traits <- select(traits, -X, -Label)
traits <- pivot_wider(traits, names_from = Trait, values_from = Measure)
traits <- mutate(traits, Femur.w = Femur/Webers, Scape.w = Scape/Webers, Mandible.w = `Mandible length`/Webers, Headl.w = `Head length`/Webers, Eyel.w = `Eye length`/Webers, Headw.w = `Head width`/Webers)
traits <- pivot_longer(traits, 5:17, names_to = "Trait", values_to = "Measure")
unique(traits$X.1)
#some traits are NA because of damage to the specimen
traits <- drop_na(traits)
#calculate the mean value of the trait for each species at each site
traits.ag <- group_by(traits, Site, X.1, Trait) %>%
summarise(mean = mean(Measure), sd = sd(Measure))
#create a data frame of the mean values for each species across all sites
traits.sp <- group_by(traits, X.1, Trait) %>%
summarise(mean = mean(Measure), sd = sd(Measure))
#calculate CWM trait values
#I want to do abundance
#it's proportional abundances
site.j <- select(cov, uniID, Site)
wide <- right_join(site.j, wide, by = "uniID")
wide <- select(wide, -X)
#remove the two other solenopsis species with 1 individual
wide <- select(wide, -12, -13)
#wide <- rename(wide, Site = Site.x) %>%
#select(-Site.y)
long <- pivot_longer(wide, 3:13, names_to = "species", values_to = "count")
#get total abundance per trap
long <- group_by(long, uniID) %>%
mutate(total = sum(count))
long <- long %>% mutate(rel.abun = count/total)
traits.ag <- rename(traits.ag, species = X.1)
traits.ag$species <- gsub(" ", "", traits.ag$species)
#this adds NA traits to 0 abundances - species isn't found at pitfall or site
join.right <- right_join(traits.ag, long, by = c("Site", "species"))
#join.left <- left_join(traits.ag, long, by = c("Site", "species"))
CWM <- mutate(join.right, cwm.prod = mean*rel.abun)
CWM <- group_by(CWM, Site, uniID, Trait) %>% summarise(cwm = sum(cwm.prod))
#can log transform the abundances to look at dominants vs subordinates
#join environmental data to CWM trait dataframe
CWM <- left_join(CWM, cov, by = "uniID")
CWM <- rename(CWM, Site = Site.x)
mat <- pivot_wider(CWM, names_from = Trait, values_from = cwm)
mat <- select(mat, 5:11, 14:17, 25:31, 36:48) %>% ungroup()
mat <- ungroup(mat) %>% select(-uniID)
mat <- drop_na(mat)
#str(mat)
M <- cor(mat)
corrplot::corrplot(M, method = "number")
# I want the PCA on traits
# make it wide again
traits.wide <- pivot_wider(traits, names_from = Trait, values_from = Measure)
traits.wide <- select(traits.wide, 11:17)
traits.wide <- drop_na(traits.wide)
library(vegan)
library(ggvegan)
traits.pca <- rda(traits.wide)
#summary(traits.pca)
#no scaling because the traits all have the same units
autoplot(traits.pca, xlab = "PCA 82.8%", ylab = "PCA 10.5%")
library(vegan)
env <- select(cov, 3:9, 12:15, 23:27, 29) %>% drop_na()
env.labels <- select(cov, 1:2)
options(scipen = 999)
env.pca <- rda(env, scaling = TRUE)
#summary(env.pca)
autoplot(env.pca)
#doesn't look good
#standardize to mean of zero etc
#not sure if correct
env.d <- decostand(env, method = "standardize")
env.pca <- rda(env.d)
#summary(env.pca)
autoplot(env.pca, xlab = "PCA 31.4%", ylab = "PCA 20.3%")
itv <- data.frame()
#body size
webers <- traits %>% filter(Trait == "Webers")
partition <- aov(Measure~X.1, data = webers)
summary(partition)
#ITV is a low component of overall variability
logWebers <- log(webers$Measure)
modPart <- lme(logWebers ~ 1, random = ~ 1 | Site / X.1, data = webers, na.action = na.omit)
varcompWeber <- ape::varcomp(modPart, scale = 1)
varcompWeber
#body size differences between individuals of the same species within a site account for 9.2% variation
#differences among species within a site account for 90.7%
#differences among species between sites accounts for 0 %
#We need to set up our data
spe <- wide
#for traits species should be rows, traits cols
traits.spe <- select(traits.sp, -sd)
traits.spe <- pivot_wider(traits.spe, names_from = Trait, values_from = mean)
#only keep corrected traits (divided by body length)
#only keep one head trait (keeping width)
traits.spe <- select(traits.spe, 1, 3,5, 9, 11, 13, 14)
traits.spe <- rename(traits.spe, species = X.1)
row.names(traits.spe) <- traits.spe$species
traits.spe <- as.data.frame(traits.spe) %>% ungroup()
traits.spe <- select(traits.spe, -species)
#I want veg height but there are NAs ugh
env4 <- select(cov, uniID, 2, 3, 4, 5,12, 13,15,  17, 23, 29, 34)
env4$Microsite <- as.factor(env4$Microsite)
naveg <- env4[is.na(env4$veg..height),]
#make a vector of NA values
naveg <- naveg$uniID
`%!in%` <- Negate(`%in%`)
#remove those NA rows from the species table
spe <- spe[spe$uniID %!in% naveg, ]
env4 <- env4[env4$uniID %!in% naveg, ]
row.names(env4) <- env4$uniID
env4 <- env4[,-1]
row.names(spe) <- spe$uniID
spe <- select(spe, -1, -2)
spe.bin <- spe
spe.bin[spe.bin > 1] <- 1
library(FD)
#need a species by trait matrix, but I want to use the population means
#make species name the name + site
trait.pop <- traits.ag
trait.pop$spepop <- paste(trait.pop$species, trait.pop$Site)
trait.pop <- ungroup(trait.pop) %>% select(spepop, Trait, mean)
trait.pop <- pivot_wider(trait.pop, names_from = Trait, values_from = mean)
trait.pop <- select(trait.pop, 1, 3, 5, 7, 8, 11, 13, 14)
# need a species by site matrix with the species pop names
long.pop <- long.pres
long.pop$spepop <- paste(long.pop$species, long.pop$Site)
long.pop <- select(long.pop, 1, 8, 5)
wide.pop <- pivot_wider(long.pop, names_from = spepop, values_from = count.bin)
wide.pop[is.na(wide.pop)] <- 0
sites <- wide.pop$uniID
wide.pop <- ungroup(wide.pop) %>% select(-uniID)
wide.pop <- wide.pop[which(colSums(wide.pop) !=0)]
wide.pop <- cbind(sites, wide.pop)
row.names(wide.pop) <- wide.pop$sites
wide.pop <- select(wide.pop, -sites)
wide.pop <- wide.pop[which(rowSums(wide.pop) !=0),]
#check to ensure names are matched correctly between dataframes
spec <- colnames(wide.pop)
all.equal(spec, trait.pop$spepop)
trait.pop <- as.data.frame(trait.pop)
row.names(trait.pop) <- trait.pop$spepop
trait.pop <- select(trait.pop, -spepop)
fun <- dbFD(trait.pop, wide.pop)
trait.pop <- traits.ag
trait.pop$spepop <- paste(trait.pop$species, trait.pop$Site)
trait.pop <- ungroup(trait.pop) %>% select(spepop, Trait, mean)
trait.pop <- pivot_wider(trait.pop, names_from = Trait, values_from = mean)
trait.pop <- select(trait.pop, 1, 3, 5, 7, 8, 11, 13, 14)
long.pop <- long.pres
#get rid of zero rows in species data and also in environmental data
zero <- filter(spe.bin,rowSums(spe.bin)!=0)
zeroID <- row.names(zero)
zeroenv <- cov[cov$uniID %in% zeroID, ]
envz <- select(zeroenv,2,  3:9, 12, 15, 17, 23, 29, 34)
cwm.comm <- select(CWM.pres, 2:4)
cwm.comm <- pivot_wider(cwm.comm, names_from = Trait, values_from = cwm)
cwm.comm <- select(cwm.comm, 3,5, 8,9,11, 13, 14)
long.pres <- pivot_longer(wide, 3:13, names_to = "species", values_to = "count")
long.pres <- mutate(long.pres, count.bin = ifelse(count >= 1, 1, 0))
#get total abundance per trap
long.pres <- group_by(long.pres, uniID) %>%
mutate(total = sum(count.bin))
long.pres <- long.pres %>% mutate(rel.abun = count.bin/total)
#traits.ag <- rename(traits.ag, species = X.1)
#traits.ag$species <- gsub(" ", "", traits.ag$species)
#this adds NA traits to 0 abundances - species isn't found at pitfall or site
join.right <- right_join(traits.ag, long.pres, by = c("Site", "species"))
#join.left <- left_join(traits.ag, long, by = c("Site", "species"))
CWM.pres <- mutate(join.right, cwm.prod = mean*rel.abun)
CWM.pres <- group_by(CWM.pres, Site, uniID, Trait) %>% summarise(cwm = sum(cwm.prod))
#can log transform the abundances to look at dominants vs subordinates
#join environmental data to CWM trait dataframe
CWM.pres <- left_join(CWM.pres, cov, by = "uniID")
CWM <- rename(CWM, Site = Site.x)
library(FD)
#need a species by trait matrix, but I want to use the population means
#make species name the name + site
trait.pop <- traits.ag
trait.pop$spepop <- paste(trait.pop$species, trait.pop$Site)
trait.pop <- ungroup(trait.pop) %>% select(spepop, Trait, mean)
trait.pop <- pivot_wider(trait.pop, names_from = Trait, values_from = mean)
trait.pop <- select(trait.pop, 1, 3, 5, 7, 8, 11, 13, 14)
# need a species by site matrix with the species pop names
long.pop <- long.pres
long.pop$spepop <- paste(long.pop$species, long.pop$Site)
long.pop <- select(long.pop, 1, 8, 5)
wide.pop <- pivot_wider(long.pop, names_from = spepop, values_from = count.bin)
wide.pop[is.na(wide.pop)] <- 0
sites <- wide.pop$uniID
wide.pop <- ungroup(wide.pop) %>% select(-uniID)
wide.pop <- wide.pop[which(colSums(wide.pop) !=0)]
wide.pop <- cbind(sites, wide.pop)
row.names(wide.pop) <- wide.pop$sites
wide.pop <- select(wide.pop, -sites)
wide.pop <- wide.pop[which(rowSums(wide.pop) !=0),]
#check to ensure names are matched correctly between dataframes
spec <- colnames(wide.pop)
all.equal(spec, trait.pop$spepop)
trait.pop <- as.data.frame(trait.pop)
row.names(trait.pop) <- trait.pop$spepop
trait.pop <- select(trait.pop, -spepop)
fun <- dbFD(trait.pop, wide.pop)
library(betapart)
spe.bin.core <- betapart.core(spe.bin)
spe.bin.multi <- beta.multi(spe.bin)
spe.bin.samp <- beta.sample(spe.bin.core, sites = 9, samples = 100)
dist <- beta.pair(spe.bin, index.family = "sorensen")
bd <- vegan::betadisper(dist[[3]], env4$shrub.site)
boxplot(bd)
anova(bd)
# difference in dispersion between the three
TukeyHSD(bd)
# contrasts not significant. ok.
library(FD)
library(vegan)
gow <- gowdis(env4)
euc <- dist(env4, "euclidean")
gow <- as.matrix(gow)
sor <- dist[[3]]
sor <- as.matrix(sor)
sor.mean <- rowMeans(sor, na.rm = TRUE)
sim <- as.matrix(dist[[1]])
sim.mean <- rowMeans(sim, na.rm = TRUE)
sne <- as.matrix(dist[[2]])
sne.mean <- rowMeans(sne, na.rm = TRUE)
envbeta <- cbind(env4, sor.mean, sim.mean, sne.mean)
mb <- glmmTMB(sim.mean ~  arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site + (1|Site), data = envbeta)
shapiro.test(resid(mb))
plot(resid(mb))
plot(resid(mb) ~ envbeta$sim.mean)
mb2 <- glmmTMB(sne.mean ~  arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site +(1|Site), data = envbeta)
size <- filter(CWM.pres, Trait == "Webers")
m1 <- glmmTMB(cwm ~ esi + (1|Site.x), data = size)
summary(m1)
m2 <- glmmTMB(cwm ~ arid + (1|Site.x), data = size)
summary(m2)
ggplot(size, aes(arid, cwm)) + geom_smooth(method = lm)
summary(mb)
summary(mb2)
envlong <- pivot_longer(envbeta, 11:13, names_to = "beta", values_to = "mean")
envlong <- pivot_longer(envlong, c(1:6, 8, 9), names_to = "env", values_to = "value")
ggplot(envlong, aes(value,mean , color = beta)) +
stat_smooth(method = "lm") + facet_wrap(~env, scales = "free")
euc.dry <-dist(env4$dry.veg.percent, "euclidean")
euc.Prec <- dist(env4$Prec, "euclidean")
euc.esi <- dist(env4$esi, "euclidean")
euc.vegheight <- dist(env4$veg..height, "euclidean")
euc.temp <- dist(env4$Temp, "euclidean")
euc.siteveg <- dist(env4$mean.bare, "euclidean")
euc.arid <- dist(env4$arid, "euclidean")
mantel(euc.dry, sor, method = "spearman", permutations = 999, na.rm = TRUE)
mantel(euc.Prec, sor, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.Prec, gow, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.vegheight, sor, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.temp, sor, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.siteveg, sor, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.arid, sor, method = "spearman", permutations = 99, na.rm = TRUE)
# dry.veg. percent matters
# site level differences do
#yes, beta diversity (species composition) is correlated with the environment
mb <- glmmTMB(sim.mean ~  arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site + (1|Site), data = envbeta)
plot(resid(mb))
summary(mb)
check_collinearity(mb)
mb <- glmmTMB(log(sim.mean) ~  arid + esi  +mean.cover +dry.veg.percent+  Microsite  + shrub.site + (1|Site), data = envbeta)
View(envbeta)
ggplot(envbeta, aes(esi, sim.mean)) + geom_smooth()
ggplot(envbeta, aes(esi, sim.mean)) + geom_smooth() + geom_point()
ggplot(envbeta, aes(esi, sim.mean)) + geom_smooth()
mb2 <- glmmTMB(sne.mean ~  arid   +mean.cover +dry.veg.percent+  Microsite  + shrub.site +(1|Site), data = envbeta)
mb <- glmmTMB(sim.mean ~  arid  +mean.cover +dry.veg.percent+  Microsite  + shrub.site + (1|Site), data = envbeta)
summary(mb)
mb <- glmmTMB(sim.mean ~  arid  + esi + mean.cover +dry.veg.percent+  Microsite  + shrub.site + (1|Site), data = envbeta)
msor <- glmmTMB(sor ~  arid  + esi + mean.cover +dry.veg.percent+  Microsite  + shrub.site + (1|Site), data = envbeta)
msor <- glmmTMB(sor.mean ~  arid  + esi + mean.cover +dry.veg.percent+  Microsite  + shrub.site + (1|Site), data = envbeta)
summary(msor)
shapiro.test(resid(msor))
msor2 <- glmmTMB(sor.mean ~  arid  + esi + mean.cover +dry.veg.percent+  Microsite  + shrub.site , data = envbeta)
AIC(msor, msor2)
summary(msor2)
m5 <- glmmTMB(Species ~ mean.cover +dry.veg.percent  +Microsite  + shrub.site + month + esi + arid + (1|Site) , family = "poisson", data = cov)
summary(m5)
ggplot(cov, aes(arid, Species)) + geom_smooth()
m5 <- glmmTMB(Species ~ mean.cover +dry.veg.percent  +Microsite  + shrub.site + month + esi + (1|Site) , family = "poisson", data = cov)
summary(m5)
m5 <- glmmTMB(Species ~ mean.cover +dry.veg.percent  +Microsite  + shrub.site + month + esi + arid + (1|Site) , family = "poisson", data = cov)
m5 <- glmmTMB(Species ~ mean.cover +dry.veg.percent  +Microsite  + shrub.site + month + esi + arid + (1|Site) , family = "poisson", data = cov)
summary(m5)
m5 <- glmmTMB(Species ~ mean.cover +dry.veg.percent  +Microsite  + shrub.site +  esi + arid + (1|Site) , family = "poisson", data = cov)
summary(m5)
ggplot(envbeta, aes(esi, sor.mean)) + geom_smooth()
ggplot(envbeta, aes(arid, sor.mean)) + geom_smooth()
mantel(euc.dry, sor, method = "spearman", permutations = 999, na.rm = TRUE)
mantel(euc.arid, sor, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.esi, sor, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.arid, sim, method = "spearman", permutations = 99, na.rm = TRUE)
mantel(euc.esi, sim, method = "spearman", permutations = 99, na.rm = TRUE)
n <- mantel(euc.arid, sim, method = "spearman", permutations = 99, na.rm = TRUE)
plot(n)
library(dplyr)
library(sf)
#read in GABI ants data
ants <- read.csv("raw data/GABI_Data_Release1.0_18012020.csv")
fire <- filter(ants, valid_species_name == "Solenopsis.xyloni")
fire <- filter(fire, dubious != "Dubious")
#I'm removing the Bahamas population
fire <- filter(fire, country != "Bahamas")
unique(fire$country)
fire <- filter(fire, dec_lat != "")
crs <- st_crs(envs)
fire_sf <- st_as_sf(fire, coords = c("dec_long", "dec_lat"), crs= st_crs(sh))
#ant SDMs
#tutorial from vignette
# Load packages -- the order here is important because some pkg functions overwrite others.
library(ENMeval)
library(raster)
crs <- st_crs(envs)
write.csv(fire, "fireants.csv")
sh <- st_read("raw data/Bentity2_shapefile_fullres.shp")
fire_sf <- st_as_sf(fire, coords = c("dec_long", "dec_lat"), crs= st_crs(sh))
st_write(fire_sf, "fire.shp")
load("D:/sPlotOpen/3474_54_Dataset/sPlotOpen.RData(2)/sPlotOpen.RData")
