geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.75, y = 1.3),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM Weber's \nBody Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm")) + theme(text = element_text(size = 19))
a
fit1 <- glmmTMB(Femur.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
b <-  ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "blue") +
geom_label(aes(x = 0.65, y = 1.1),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nFemur Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm"))+ theme(text = element_text(size = 19))
b
fit1 <- glmmTMB(Headl.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
c <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "blue") +
geom_label(aes(x = 0.65, y = 0.9),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5)  + ylab("CWM \nHead Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm"))+ theme(text = element_text(size = 19))
c
fit1 <- glmmTMB(Eyel.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
d <-  ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.65, y = 0.2),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nEye Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm"))+ theme(text = element_text(size = 19))
d
fit1 <- glmmTMB(Headw.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
e <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.75, y = 0.8),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm")) + ylab("CWM \nHead Width (mm)")+ theme(text = element_text(size = 19))
e
fit1 <- glmmTMB(Scape.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
f <-  ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "blue") +
geom_label(aes(x = 0.75, y = 0.85),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nScape Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm")) + theme(text = element_text(size = 19))
f
fit1 <- glmmTMB(Mandible.w ~ PC2  + (1|Site), cwm)
summary(fit1)
performance(fit1)
AIC(fit1, t1)
g <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.75, y = 0.5),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nMandible Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm"))+ theme(text = element_text(size = 19))
g
plots <- list(a,b,c,d,e,f,g)
grobs <- list()
widths <- list()
for (i in 1:length(plots)){
grobs[[i]] <- ggplotGrob(plots[[i]])
widths[[i]] <- grobs[[i]]$widths[2:5]
}
maxwidth <- do.call(grid::unit.pmax, widths)
for (i in 1:length(grobs)){
grobs[[i]]$widths[2:5] <- as.list(maxwidth)
}
p <- do.call("grid.arrange", c(grobs, ncol = 2))
p
fit1 <- glmmTMB(Webers ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
a <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.75, y = 1.3),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM Weber's \nBody Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,2,0,0), "mm")) + theme(text = element_text(size = 19))
a
fit1 <- glmmTMB(Femur.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
b <-  ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "blue") +
geom_label(aes(x = 0.65, y = 1.1),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nFemur Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,2,0,0), "mm"))+ theme(text = element_text(size = 19))
b
fit1 <- glmmTMB(Headl.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
c <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "blue") +
geom_label(aes(x = 0.65, y = 0.9),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5)  + ylab("CWM \nHead Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,2,0,0), "mm"))+ theme(text = element_text(size = 19))
c
fit1 <- glmmTMB(Eyel.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
d <-  ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.65, y = 0.2),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nEye Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,2,0,0), "mm"))+ theme(text = element_text(size = 19))
d
fit1 <- glmmTMB(Headw.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
e <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.75, y = 0.8),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,2,0,0), "mm")) + ylab("CWM \nHead Width (mm)")+ theme(text = element_text(size = 19))
e
fit1 <- glmmTMB(Scape.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
t <- model_performance(fit1)
f <-  ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "blue") +
geom_label(aes(x = 0.75, y = 0.85),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nScape Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,2,0,0), "mm")) + theme(text = element_text(size = 19))
f
fit1 <- glmmTMB(Mandible.w ~ PC2  + (1|Site), cwm)
summary(fit1)
performance(fit1)
AIC(fit1, t1)
g <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.75, y = 0.5),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nMandible Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm"))+ theme(text = element_text(size = 19))
g
plots <- list(a,b,c,d,e,f,g)
grobs <- list()
widths <- list()
for (i in 1:length(plots)){
grobs[[i]] <- ggplotGrob(plots[[i]])
widths[[i]] <- grobs[[i]]$widths[2:5]
}
maxwidth <- do.call(grid::unit.pmax, widths)
for (i in 1:length(grobs)){
grobs[[i]]$widths[2:5] <- as.list(maxwidth)
}
p <- do.call("grid.arrange", c(grobs, ncol = 2))
p
fit1 <- glmmTMB(Mandible.w ~ PC2  + (1|Site), cwm)
summary(fit1)
performance(fit1)
g <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed", se = FALSE) +
geom_label(aes(x = 0.75, y = 0.5),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nMandible Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm"))+ theme(text = element_text(size = 19))
g
fit1 <- glmmTMB(Scape.w ~ PC2 + (1|Site), cwm)
summary(fit1)
performance(fit1)
fit1 <- glmmTMB(Mandible.w ~ PC2  + (1|Site), cwm)
summary(fit1)
performance(fit1)
AIC(fit1, t1)
fit1 <- glmmTMB(Scape.w ~ PC2 + (1|Site), cwm)
summary(fit1)
g <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed") +
geom_label(aes(x = 0.75, y = 0.5),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nMandible Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm"))+ theme(text = element_text(size = 19))
g
fit1 <- glmmTMB(Mandible.w ~ PC2  + (1|Site), cwm)
summary(fit1)
performance(fit1)
AIC(fit1, t1)
g <- ggplot(fit1$frame, aes_string(x = names(fit1$frame)[2], y = names(fit1$frame)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "#3C4142", linetype = "dashed") +
geom_label(aes(x = 0.75, y = 0.5),vjust=1, hjust = 0,
label = paste("Marginal \nr2 = ",signif(t$R2_marginal, 2)), size = 5) + ylab("CWM \nMandible Length (mm)") + xlab("PC2") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + theme(plot.margin=grid::unit(c(0,1,0,0), "mm"))+ theme(text = element_text(size = 19))
g
View(cwm)
library(dplyr)
library(tidyr)
library(ggplot2)
library(performance)
library(glmmTMB)
library(vegan)
library(ggvegan)
library(FD)
library(picante)
library(gridExtra)
library(picante)
library(phytools)
library(tidyr)
install.packages("phytools")
install.packages("picante")
library(picante)
library(phytools)
library(tidyr)
genusv <- c("Cyphomyrmex", "Dorymyrmex", "Forelius", "Messor", "Myrmecocystus", "Pheidole", "Pogonomyrmex", "Solenopsis", "Temnothorax")
#import nexus tree
tree <- read.nexus("moreau/moreaubeast.nex")
str(tree)
plot(tree)
tree
labels <- tree[["tip.label"]]
labels <- as.data.frame(labels)
full <- labels$labels
labels <- separate_wider_delim(labels, cols = 1, delim ="_", names = c("genus", "sp", "csm"), too_few = "align_start", too_many = "merge")
labels <- cbind(full, labels)
labels <- subset(labels, genus %in% genusv)
keep <- labels$full
df <- data.frame(matrix(ncol = 19, nrow = 1))
colnames(df) <- keep
df[is.na(df)] <- 1
df <- dplyr::select(df, 1, 4, 6, 8, 11, 12, 13, 16, 17, 18, 19)
pruned <- prune.sample(df, tree)
pruned
pruned[["tip.label"]] <- c("Temnothoraxandrei", "Pheidolehyatti", "Cyphomyrmexwheeleri", "Solenopsisxyloni", "Messorandrei", "Messorpergandei", "Pogonomyrmexcalifornicus", "Myrmecocystus", "Dorymyrmexbicolor", "Dorymyrmexinsanus", "Foreliuspruinosis")
plot(pruned)
labelorder <- c("Temnothoraxandrei", "Pheidolehyatti", "Cyphomyrmexwheeleri", "Solenopsisxyloni", "Messorandrei", "Messorpergandei", "Pogonomyrmexcalifornicus", "Myrmecocystus", "Dorymyrmexbicolor", "Dorymyrmexinsanus", "Foreliuspruinosis")
plot(pruned)
#
# add missing species
plot(tree2)
traitphy <- traits.sp1
row.names(traitphy) <- traitphy$X.1
traitphy <- select(traitphy, -X.1)
names <- sort(c("Temnothoraxandrei", "Pheidolehyatti", "Cyphomyrmexwheeleri", "Solenopsisxyloni", "Messorandrei", "Messorpergandei", "Pogonomyrmexcalifornicus", "Myrmecocystus", "Dorymyrmexbicolor", "Dorymyrmexinsanus", "Foreliuspruinosis") )
row.names(traitphy) <- names
traitphy <- traitphy[match(labelorder, row.names(traitphy)),]
row.names(traitphy)
pruned[["tip.label"]]
par(mfrow=c(2,2))
for (i in names(traitphy)) {
plot(pruned, show.tip.label=FALSE, main=i)
tiplabels(pch=22, col=traitphy[,i]+1, bg=traitphy[,i]+1, cex=1.5)
}
Kcalc(traitphy, pruned)
install.packages("phytools")
#import nexus tree
tree <- read.nexus("moreau/moreaubeast.nex")
str(tree)
plot(tree)
tree
labels <- tree[["tip.label"]]
labels <- as.data.frame(labels)
full <- labels$labels
labels <- separate_wider_delim(labels, cols = 1, delim ="_", names = c("genus", "sp", "csm"), too_few = "align_start", too_many = "merge")
labels <- cbind(full, labels)
labels <- subset(labels, genus %in% genusv)
keep <- labels$full
df <- data.frame(matrix(ncol = 19, nrow = 1))
colnames(df) <- keep
df[is.na(df)] <- 1
df <- dplyr::select(df, 1, 4, 6, 8, 11, 12, 13, 16, 17, 18, 19)
pruned <- prune.sample(df, tree)
pruned
pruned[["tip.label"]] <- c("Temnothoraxandrei", "Pheidolehyatti", "Cyphomyrmexwheeleri", "Solenopsisxyloni", "Messorandrei", "Messorpergandei", "Pogonomyrmexcalifornicus", "Myrmecocystus", "Dorymyrmexbicolor", "Dorymyrmexinsanus", "Foreliuspruinosis")
plot(pruned)
labelorder <- c("Temnothoraxandrei", "Pheidolehyatti", "Cyphomyrmexwheeleri", "Solenopsisxyloni", "Messorandrei", "Messorpergandei", "Pogonomyrmexcalifornicus", "Myrmecocystus", "Dorymyrmexbicolor", "Dorymyrmexinsanus", "Foreliuspruinosis")
plot(pruned)
traitphy <- traits.sp1
row.names(traitphy) <- traitphy$X.1
traitphy <- select(traitphy, -X.1)
names <- sort(c("Temnothoraxandrei", "Pheidolehyatti", "Cyphomyrmexwheeleri", "Solenopsisxyloni", "Messorandrei", "Messorpergandei", "Pogonomyrmexcalifornicus", "Myrmecocystus", "Dorymyrmexbicolor", "Dorymyrmexinsanus", "Foreliuspruinosis") )
row.names(traitphy) <- names
traitphy <- traitphy[match(labelorder, row.names(traitphy)),]
row.names(traitphy)
pruned[["tip.label"]]
par(mfrow=c(2,2))
for (i in names(traitphy)) {
plot(pruned, show.tip.label=FALSE, main=i)
tiplabels(pch=22, col=traitphy[,i]+1, bg=traitphy[,i]+1, cex=1.5)
}
Kcalc(traitphy, pruned)
multiPhylosignal(traitphy, pruned)
ps <- multiPhylosignal(traitphy, pruned)
write.csv(ps, "Clean Data/phylo.csv")
ps
phy <- multi2di(pruned)
multiPhylosignal(traitphy, phy)
p4d <- phylo4d(pruned, traitphy)
barplot.phylo4d(p4d, tree.type = "phylo", tree.ladderize = TRUE)
phyloSignal(p4d = p4d, method = "all")
library(phylosignal)
phyloSignal(p4d = p4d, method = "all")
Test.Kmult<-function(x,phy,iter=999){
library(ape)
Kmult<-function(x,phy){
x<-as.matrix(x)
N<-length(phy$tip.label)
ones<-array(1,N)
C<-vcv.phylo(phy)
C<-C[row.names(x),row.names(x)]
a.obs<-colSums(solve(C))%*%x/sum(solve(C))
#evol.vcv code
distmat<-as.matrix(dist(rbind(as.matrix(x),a.obs)))
MSEobs.d <- sum(distmat[(1:N),(N+1)]^2)
#sum distances root vs. tips
eigC <- eigen(C)
D.mat<-solve(eigC$vectors
%*% diag(sqrt(eigC$values))
%*% t(eigC$vectors))
dist.adj<-as.matrix(dist(rbind((D.mat
%*%(x-(ones%*%a.obs))),0)))
MSE.d<-sum(dist.adj[(1:N),(N+1)]^2)
#sum distances for transformed data)
K.denom<-(sum(diag(C))-
N*solve(t(ones)%*%solve(C)%*%ones)) / (N-1)
K.stat<-(MSEobs.d/MSE.d)/K.denom
return(K.stat)
}
K.obs<-Kmult(x,phy)
P.val <- 1
K.val <- rep(0, iter)
for (i in 1:iter){
x.r<-as.matrix(x[sample(nrow(x)),])
rownames(x.r)<-rownames(x)
K.rand<-Kmult(x.r,phy)
P.val<-ifelse(K.rand>=K.obs, P.val+1,P.val)
K.val[i] <- K.rand
}
P.val <- P.val/(iter + 1)
K.val[iter + 1] = K.obs
hist(K.val, 30, freq = TRUE, col = "gray",
xlab = "Phylogenetic Signal")
arrows(K.obs, 50, K.obs, 5, length = 0.1, lwd = 2)
return(list(phy.signal = K.obs, pvalue = P.val))
}
traitphystand <- decostand(traitphy, method = "standardize")
Test.Kmult(traitphystand, pruned)
View(cov)
library(adespatial)
library(SoDA)
#convert our degrees in lat long to cartesian
sites.xy <- geoXY(SES2$Lat.x, SES2$Long.x)
mem <- dbmem(sites.xy)
var_df <- cbind(SES2, sites.xy)
disp <- SES2$SES3
env <- select(SES2, 4, 5, 8, 12:14, 18, 19, 24)
v1 <- varpart(Y =disp, X = env, sites.xy)
summary(v1)
#showvarparts(v1)
plot(v1)
#rda(v1)
v1
rda(v1)
showvarparts(v1)
rda.all <- rda(disp ~ env + sites.xy)
anova.cca(rda(disp, env))
anova.caa(rda(disp, sites.xy))
anova.cca(rda(disp, sites.xy))
anova.cca(rda(disp, env, sites.xy))
t.test(SES$SES3)
t.test(SES$SES3)
?specaccum
View(sites.xy)
View(var_df)
sites_sf <- var_df %>% select(Site, Lat.x, Lat.y)
sites_sf <- var_df %>% select(Site, Lat.x, Long.x)
library(sf)
sites_sf <- var_df %>% select(Site, Lat.x, Long.x)
sites_sf <- st_as_sf(sites_sf, coords=c("Lat.x","Long.x"),crs=4326)
plot(sites_Sf)
plot(sites_sf)
sites_dist <- st_distance(sites_sf)
sites_dist
sites_dist <- as.matrx(sites_dist)
sites_dist <- as.matrix(sites_dist)
row.names(sites_dist) <- sites_sf$Site
sites_dist
col.names(sites_dist) <- sites_sf$Site
library(purrr)
sites_m <- split(sites_sf, Site) %>% map(st_distance)
sites_m <- sites_sf %>% split(.$Site) %>% map(st_distance)
warnings()
View(sites_m)
sites_m$Aven
sites_m <- sites_sf %>% split(.$Site) %>% map(st_distance) %>% map(as.matrix)
sites_m <- sites_sf %>% split(.$Site) %>% map(st_distance) %>% map(as.matrix) %>% map(upper.tri)
sites_m$Aven
sites_m <- sites_sf %>% split(.$Site) %>% map(st_distance) %>% map(as.matrix) %>% map(subset(upper.tri))
sites_m <- sites_sf %>% split(.$Site) %>% map(st_distance) %>% map(as.matrix) %>% map(.[upper.tri(.)])
sites_m$Aven
sites_m$Aven[upper.tri(sites_m$Aven)]
mean(sites_m$Aven[upper.tri(sites_m$Aven)])
f <- function(x) {
y <- x[upper.tri(x)]
mean(y)
}
m <- lapply(sites_m, f)
m
mean(m)
sites_m$SemiT
sites_m$SiCr
m1 <- glmmTMB(SES3 ~  PC1 + PC2 + (1|Site), data = SES2)
summary(m1)
performance(m1)
m1 <- glmmTMB(mpd.obs.z ~ SES3 + PC1 + PC2 + (1|Site), data = test)
summary(m1)
performance(m1)
m1 <- glmmTMB(SES3 ~  PC1 + PC2 + (1|Site), data = SES2)
summary(m1)
performance(m1)
#same GLM or GLMM
m1 <- glmmTMB(richness ~ PC1 + PC2 +  (1|Site), family = "poisson", data = alpha)
summary(m1)
check_overdispersion(m1)
performance(m1)
m1 <- glmmTMB(SES3 ~  PC1 + PC2 + (1|Site), data = SES2)
summary(m1)
performance(m1)
m2 <- glmmTMB(SES3 ~  PC1 + PC2, data = SES2)
summary(m2)
performance(m1)
m1 <- glmmTMB(mpd.obs.z ~ SES3 + PC1 + PC2 + (1|Site), data = test)
summary(m1)
performance(m1)
m1 <- glmmTMB(SES3 ~ mpd.obs.z + PC1 + PC2 +(1|Site), data = test)
summary(m1)
performance(m1)
#same GLM or GLMM
m1 <- glmmTMB(richness ~ PC1 + PC2 +  (1|Site), family = "poisson", data = alpha)
summary(m1)
check_overdispersion(m1)
performance(m1)
#body size
webers <- traits %>% filter(Trait == "Webers")
View(traits)
summary(partition)
#body size
webers <- traits %>% filter(Trait == "Webers")
partition <- aov(Measure~X.1, data = webers)
summary(partition)
mandible <- traits %>% filter(Trait == "Mandible.w")
partition <- aov(Measure~X.1, data = mandible)
summary(partition)
library(dplyr)
library(tidyr)
library(ggplot2)
library(performance)
library(glmmTMB)
library(vegan)
library(ggvegan)
library(FD)
library(picante)
library(gridExtra)
#body size
webers <- traits %>% filter(Trait == "Webers")
partition <- aov(Measure~X.1, data = webers)
summary(partition)
logWebers <- log(webers$Measure)
modPart <- lme(logWebers ~ 1, random = ~ 1 | Site / X.1, data = webers, na.action = na.omit)
varcompWeber <- ape::varcomp(modPart, scale = 1)
varcompWeber
# relative leg length
femur <- traits %>% filter(Trait == "Femur.w")
partition <- aov(Measure~X.1, data = femur)
summary(partition)
logFemur <- log(femur$Measure)
modPart <- lme(logFemur ~ 1, random = ~ 1 | Site / X.1, data = femur, na.action = na.omit)
varcompFemur <- ape::varcomp(modPart, scale = 1)
varcompFemur
#relative femur length differences between individuals of the same species within a site account for 31% variation
#differences among species within a site account for 66.7%
#differences among species between sites accounts for 2.4 %
```
scape <- traits %>% filter(Trait == "Scape.w")
partition <- aov(Measure~X.1, data = scape)
summary(partition)
mandible <- traits %>% filter(Trait == "Mandible.w")
partition <- aov(Measure~X.1, data = mandible)
summary(partition)
el <- traits %>% filter(Trait == "Eyel.w")
partition <- aov(Measure~X.1, data = el)
summary(partition)
hw <- traits %>% filter(Trait == "Headw.w")
partition <- aov(Measure~X.1, data = hw)
summary(partition)
