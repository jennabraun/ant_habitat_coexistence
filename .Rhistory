## Traits
```{r}
# I want the PCA on traits
# make it wide again
traits.wide <- pivot_wider(traits, names_from = Trait, values_from = Measure)
traits.wide <- select(traits.wide, 11:17)
traits.wide <- drop_na(traits.wide)
library(vegan)
library(ggvegan)
traits.pca <- rda(traits.wide)
#summary(traits.pca)
#no scaling because the traits all have the same units
autoplot(traits.pca, xlab = "PCA 82.8%", ylab = "PCA 10.5%")
```
## Sites
```{r}
env <- select(cov, 3:9, 12:15, 23:27, 29) %>% drop_na()
env.labels <- select(cov, 1:2)
options(scipen = 999)
env.pca <- rda(env, scaling = TRUE)
#summary(env.pca)
autoplot(env.pca)
#doesn't look good
#standardize to mean of zero etc
#not sure if correct
env.d <- decostand(env, method = "standardize")
env.pca <- rda(env.d)
#summary(env.pca)
autoplot(env.pca, xlab = "PCA 31.4%", ylab = "PCA 20.3%")
```
# Fourth Corner
## 4th Corner bivariate correlations
```{r}
#We need to set up our data
spe <- wide
#for traits species should be rows, traits cols
traits.spe <- select(traits.sp, -sd)
traits.spe <- pivot_wider(traits.spe, names_from = Trait, values_from = mean)
#only keep corrected traits (divided by body length)
traits.spe <- select(traits.spe, 1, 3,5,8, 9, 11, 13, 14)
traits.spe <- rename(traits.spe, species = X.1)
env4 <- select(cov, uniID, 3, 4,13, 17)
env4$Microsite <- as.factor(env4$Microsite)
row.names(env4) <- env4$uniID
env4 <- env4[,-1]
row.names(spe) <- spe$uniID
spe <- select(spe, -1, -2)
row.names(traits.spe) <- traits.spe$species
traits.spe <- select(traits.spe, -3)
traits.spe <- as.data.frame(traits.spe)
traits.spe <- traits.spe[,-1]
library(mvabund)
fit <- traitglm(spe, env4, traits.spe)
anova(fit, nBoot = 10)
a        = max( abs(fit$fourth.corner) )
colort   = colorRampPalette(c("blue","white","red"))
plot.4th = levelplot(t(as.matrix(fit$fourth.corner)), xlab="Environmental Variables",
ylab="Species traits", col.regions=colort(100), at=seq(-a, a, length=100),
scales = list( x= list(rot = 45)))
print(plot.4th)
plot.4th = levelplot(t(as.matrix(fit$fourth.corner)), xlab="Environmental Variables",
ylab="Species traits", col.regions=colort(100), at=seq(-a, a, length=100),
scales = list( x= list(rot = 45)))
colort   = colorRampPalette(c("blue","white","red"))
plot.4th = levelplot(t(as.matrix(fit$fourth.corner)), xlab="Environmental Variables",
ylab="Species traits", col.regions=colort(100), at=seq(-a, a, length=100),
scales = list( x= list(rot = 45)))
print(plot.4th)
View(env4)
fit <- traitglm(spe, env4, traits.spe, method = "glm1path")
ft1$fourth #notice LASSO penalty has shrunk many interactions to zero
fit$fourth #notice LASSO penalty has shrunk many interactions to zero
library(lattice)
a        = max( abs(ft1$fourth.corner) )
a        = max( abs(fit$fourth.corner) )
plot.4th = levelplot(t(as.matrix(fit$fourth.corner)), xlab="Environmental Variables",
ylab="Species traits", col.regions=colort(100), at=seq(-a, a, length=100),
scales = list( x= list(rot = 45)))
print(plot.4th)
anova(fit, nBoot = 10)
fit
View(traits.spe)
traits.spe <- select(traits.spe, -Headw.w)
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
plot(four.comb.ants.adj, alpha = 0.05, stat = "D2")
four.comb.ants.adj
fit <- traitglm(spe, env4, traits.spe)
anova(fit, nBoot = 10)
library(lattice)
a        = max( abs(fit$fourth.corner) )
colort   = colorRampPalette(c("blue","white","red"))
plot.4th = levelplot(t(as.matrix(fit$fourth.corner)), xlab="Environmental Variables",
ylab="Species traits", col.regions=colort(100), at=seq(-a, a, length=100),
scales = list( x= list(rot = 45)))
print(plot.4th)
View(traits.ag)
View(traits)
#body size
webers <- traits %>% filter(Trait == Webers)
#body size
webers <- traits %>% filter(Trait == webers)
#body size
webers <- traits %>% filter(Trait == "Webers")
partition <- aov(Measure~X.1, data = webers)
summary(partition)
logWebers <- log(webers$Measure)
library(nlme)
library(ape)
modPart <- lme(logWebers ~ 1, random = ~ 1 | Site / Species, data = webers, na.action = na.omit)
modPart <- lme(logWebers ~ 1, random = ~ 1 | Site / X.1, data = webers, na.action = na.omit)
varcompWeber <- ape::varcomp(modPart, scale = 1)
varcompWeber
# relative leg length
femur <- traits %>% filter(Trait == "Femur.w")
partition <- aov(Measure~X.1, data = femur)
summary(partition)
logFemur <- log(femur$Measure)
modPart <- lme(logFemur ~ 1, random = ~ 1 | Site / X.1, data = webers, na.action = na.omit)
modPart <- lme(logFemur ~ 1, random = ~ 1 | Site / X.1, data = femur, na.action = na.omit)
varcompFemur <- ape::varcomp(modPart, scale = 1)
varcompFemur
scape <- traits %>% filter(Trait == "Scape.w")
partition <- aov(Measure~X.1, data = scape)
summary(partition)
logScape <- log(scape$Measure)
modPart <- lme(logScape ~ 1, random = ~ 1 | Site / X.1, data = scape, na.action = na.omit)
varcompScape <- ape::varcomp(modPart, scale = 1)
varcompScape
mandible <- traits %>% filter(Trait == "Mandible.w")
partition <- aov(Measure~X.1, data = mandible)
summary(partition)
logMandible <- log(mandible$Measure)
modPart <- lme(logMandible ~ 1, random = ~ 1 | Site / X.1, data = mandible, na.action = na.omit)
varcompMandible <- ape::varcomp(modPart, scale = 1)
varcompMandible
el <- traits %>% filter(Trait == "Eyel.w")
partition <- aov(Measure~X.1, data = el)
summary(partition)
logEL <- log(el$Measure)
modPart <- lme(logEL ~ 1, random = ~ 1 | Site / X.1, data = el, na.action = na.omit)
varcompEL <- ape::varcomp(modPart, scale = 1)
varcompEL
hw <- traits %>% filter(Trait == "Headw.w")
partition <- aov(Measure~X.1, data = hw)
summary(partition)
#ITV is
(0.49+1.39)/0.49
#ITV is
0.49/(0.49+1.39)
logHW <- log(hw$Measure)
modPart <- lme(logHW ~ 1, random = ~ 1 | Site / X.1, data = hw, na.action = na.omit)
varcompHW <- ape::varcomp(modPart, scale = 1)
varcompHW
View(cov)
```{r setup}
library(dplyr)
library(tidyr)
library(ggplot2)
library(performance)
library(glmmTMB)
library(ade4)
wide <- read.csv("Clean Data/ants_wide.csv")
cov <- read.csv("Clean Data/ants.csv")
sites <- read.csv("Clean Data/sites_joined.csv")
cov <- right_join(sites, cov, by = c("Site", "month"))
cov <- dplyr::select(cov, 3:10, 14:19, 22:36, 39:41)
#add ecostress sensor data
eco <- read.csv("Clean Data/ecostress.csv")
eco <- select(eco, 1, 2, 11)
eco <- rename(eco, month = Category, Site = ID, esi = ECO4ESIPTJPL_001_Evaporative_Stress_Index_PT_JPL_ESIavg)
cov <- right_join(eco, cov, by = c("Site", "month"))
shrubs <- read.csv("Clean Data/shrubs.csv")
cov <- right_join(cov, shrubs, by = "Site")
View(cov)
cov$shrub.site <- as.factor(cov$shrub.site)
traits <- read.csv("raw data/Traits.csv")
unique(traits$Trait)
#I don't trust the eye width measurements because they were from the front
traits <- filter(traits, Trait != "Eye width")
traits <- separate(traits, Photo, c("Site", "Slide", "Specimen"))
traits$Site <- gsub("Papl", "PaPl", traits$Site)
unique(traits$Site)
traits <- traits[-1,]
#remove the double pheidole entry
traits <- traits[-2,]
#need to divide the trait values by weber's body length. I want to do this at the individual level
traits <- select(traits, -X, -Label)
traits <- pivot_wider(traits, names_from = Trait, values_from = Measure)
traits <- mutate(traits, Femur.w = Femur/Webers, Scape.w = Scape/Webers, Mandible.w = `Mandible length`/Webers, Headl.w = `Head width`/Webers, Eyel.w = `Eye length`/Webers, Headw.w = `Head width`/Webers)
traits <- pivot_longer(traits, 5:17, names_to = "Trait", values_to = "Measure")
unique(traits$X.1)
#some traits are NA because of damage to the specimen
traits <- drop_na(traits)
#calculate the mean value of the trait for each species at each site
traits.ag <- group_by(traits, Site, X.1, Trait) %>%
summarise(mean = mean(Measure), sd = sd(Measure))
#create a data frame of the mean values for each species across all sites
traits.sp <- group_by(traits, X.1, Trait) %>%
summarise(mean = mean(Measure), sd = sd(Measure))
#calculate CWM trait values
#I want to do abundance
#it's proportional abundances
site.j <- select(cov, uniID, Site)
wide <- right_join(site.j, wide, by = "uniID")
wide <- select(wide, -X)
#remove the two other solenopsis species with 1 individual
wide <- select(wide, -12, -13)
#wide <- rename(wide, Site = Site.x) %>%
#select(-Site.y)
long <- pivot_longer(wide, 3:13, names_to = "species", values_to = "count")
#get total abundance per trap
long <- group_by(long, uniID) %>%
mutate(total = sum(count))
long <- long %>% mutate(rel.abun = count/total)
traits.ag <- rename(traits.ag, species = X.1)
traits.ag$species <- gsub(" ", "", traits.ag$species)
#this adds NA traits to 0 abundances - species isn't found at pitfall or site
join.right <- right_join(traits.ag, long, by = c("Site", "species"))
#join.left <- left_join(traits.ag, long, by = c("Site", "species"))
CWM <- mutate(join.right, cwm.prod = mean*rel.abun)
CWM <- group_by(CWM, Site, uniID, Trait) %>% summarise(cwm = sum(cwm.prod))
#can log transform the abundances to look at dominants vs subordinates
#join environmental data to CWM trait dataframe
CWM <- left_join(CWM, cov, by = "uniID")
View(CWM)
CWM <- rename(CWM, Site = Site.x)
ggplot(filter(CWM, Trait == "Mandible length"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Mandible length")
ggplot(filter(CWM, Trait == "Head length"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Head length")
ggplot(filter(CWM, Trait == "Eye length"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Eye length")
ggplot(filter(CWM, Trait == "Femur"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Femur")
ggplot(filter(CWM, Trait == "Scape"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Scape")
ggplot(filter(CWM, Trait == "Head width"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Head width")
ggplot(filter(CWM, Trait == "Webers body length"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Webers body length")
ggplot(filter(CWM, Trait == "Mandible.w"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Mandible length")
ggplot(filter(CWM, Trait == "Headl.w"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Head length")
ggplot(filter(CWM, Trait == "Eyel.w"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Eye length")
ggplot(filter(CWM, Trait == "Femur.w"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Femur")
ggplot(filter(CWM, Trait == "Scape.w"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Scape")
ggplot(filter(CWM, Trait == "Headw.w"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Head width")
ggplot(filter(CWM, Trait == "Webers"), aes(Site, cwm)) + geom_boxplot() + ylab("CWM Webers body length")
mand <- filter(CWM, Trait == "Mandible.w")
ggplot(filter(CWM, Trait == "Mandible.w"), aes(Site, cwm, fill = Microsite)) + geom_boxplot() + ylab("CWM Mandible length")
ggplot(filter(CWM, Trait == "Mandible.w"), aes(dry.veg.percent, cwm)) + geom_point() + ylab("CWM Mandible length")
cor.test(mand$cwm, mand$dry.veg.percent, use = "complete.obs")
ggplot(filter(CWM, Trait == "Mandible.w"), aes(veg..height, cwm)) + geom_point() + ylab("CWM Mandible length")
cor.test(mand$cwm, mand$veg..height, use = "complete.obs")
ggplot(filter(CWM, Trait == "Mandible.w"), aes(Prec, cwm)) + geom_point() + ylab("CWM Mandible length")
ggplot(filter(CWM, Trait == "Mandible.w"), aes(esi, cwm)) + geom_point() + ylab("CWM Mandible length")
femur <- filter(CWM, Trait == "Femur.w")
ggplot(filter(CWM, Trait == "Femur.w"), aes(Site, cwm, fill = Microsite)) + geom_boxplot() + ylab("CWM Femur length")
ggplot(filter(CWM, Trait == "Femur.w"), aes(dry.veg.percent, cwm)) + geom_point() + ylab("CWM Femur length")
cor.test(femur$cwm, femur$dry.veg.percent, use = "complete.obs")
ggplot(filter(CWM, Trait == "Femur.w"), aes(veg..height, cwm)) + geom_point() + ylab("CWM Femur length")
cor.test(femur$cwm, femur$veg..height, use = "complete.obs")
ggplot(filter(CWM, Trait == "Femur.w"), aes(bare.ground.percent, cwm)) + geom_point() + ylab("CWM Femur length")
cor.test(femur$cwm, femur$bare.ground.percent, use = "complete.obs")
ggplot(filter(CWM, Trait == "Femur.w"), aes(Prec, cwm)) + geom_point() + ylab("CWM Femur length")
ggplot(filter(CWM, Trait == "Femur.w"), aes(esi, cwm)) + geom_point() + ylab("CWM Femur length")
el <- filter(CWM, Trait == "Eyel.w")
ggplot(filter(CWM, Trait == "Eye.w"), aes(Site, cwm, fill = Microsite)) + geom_boxplot() + ylab("CWM Eye length")
ggplot(filter(CWM, Trait == "Eyel.w"), aes(Site, cwm, fill = Microsite)) + geom_boxplot() + ylab("CWM Eye length")
ggplot(filter(CWM, Trait == "Eyel.w"), aes(dry.veg.percent, cwm)) + geom_point() + ylab("CWM Eye.w")
ggplot(filter(CWM, Trait == "Eyel.w"), aes(veg..height, cwm)) + geom_point() + ylab("CWM Eye length")
cor.test(el$cwm, el$veg..height, use = "complete.obs")
ggplot(filter(CWM, Trait == "Eyel.w"), aes(Prec, cwm)) + geom_point() + ylab("CWM Eye length")
ggplot(filter(CWM, Trait == "Eyel.w"), aes(esi, cwm)) + geom_point() + ylab("CWM Eye length")
wl <- filter(CWM, Trait == "Webers")
ggplot(filter(CWM, Trait == "Webers"), aes(Site, cwm, fill = Microsite)) + geom_boxplot() + ylab("CWM Webers length")
ggplot(filter(CWM, Trait == "Webers"), aes(dry.veg.percent, cwm)) + geom_point() + ylab("CWM Webers length")
cor.test(wl$cwm, wl$dry.veg.percent, use = "complete.obs")
ggplot(filter(CWM, Trait == "Webers"), aes(bare.ground.percent, cwm)) + geom_point() + ylab("CWM Webers length")
ggplot(filter(CWM, Trait == "Webers"), aes(veg..height, cwm)) + geom_point() + ylab("CWM Webers length")
cor.test(wl$cwm, wl$veg..height, use = "complete.obs")
ggplot(filter(CWM, Trait == "Webers"), aes(Prec, cwm)) + geom_point() + ylab("CWM Webers length")
ggplot(filter(CWM, Trait == "Webers"), aes(esi, cwm)) + geom_point() + ylab("CWM Webers length")
mat <- pivot_wider(CWM, names_from = Trait, values_from = cwm)
mat <- select(mat, 5:11, 14:17, 25:31, 35:47) %>% ungroup()
mat <- ungroup(mat) %>% select(-uniID)
View(mat)
mat <- drop_na(mat)
M <- cor(mat)
str(mat)
mat <- pivot_wider(CWM, names_from = Trait, values_from = cwm)
mat <- select(mat, 5:11, 14:17, 25:31, 36:48) %>% ungroup()
mat <- ungroup(mat) %>% select(-uniID)
mat <- drop_na(mat)
#str(mat)
M <- cor(mat)
corrplot::corrplot(M, method = "number")
spe <- wide
#for traits species should be rows, traits cols
traits.spe <- select(traits.sp, -sd)
traits.spe <- pivot_wider(traits.spe, names_from = Trait, values_from = mean)
View(traits.spe)
traits.spe <- select(traits.spe, 1, 3,5, 9, 11, 13, 14)
traits.spe <- rename(traits.spe, species = X.1)
traits.spe <- select(traits.spe, 1, 3,5, 9, 12, 13, 17, 23, 29, 34)
#for traits species should be rows, traits cols
traits.spe <- select(traits.sp, -sd)
traits.spe <- pivot_wider(traits.spe, names_from = Trait, values_from = mean)
traits.spe <- select(traits.spe, 1, 3,5, 9, 12, 13, 17, 23, 29, 34)
View(traits.spe)
traits.spe <- rename(traits.spe, species = X.1)
env4 <- select(cov, uniID, 3, 4, 5,12, 13, 17, 23, 29, 34)
env4$Microsite <- as.factor(env4$Microsite)
naveg <- env4[is.na(env4$veg..height),]
View(naveg)
naveg <- naveg$uniID
View(spe)
spe1 <- spe[spe$uniID !%in% naveg, ]
spe1 <- spe![spe$uniID %in% naveg, ]
spe1 <- spe[spe$uniID %in% naveg, ]
%notin% <- negate(%in%)
spe1 <- spe[spe$uniID %!in% naveg, ]
`%!in%` <- Negate(`%in%`)
spe1 <- spe[spe$uniID %!in% naveg, ]
spe <- spe[spe$uniID %!in% naveg, ]
row.names(env4) <- env4$uniID
env4 <- env4[,-1]
row.names(spe) <- spe$uniID
spe <- select(spe, -1, -2)
row.names(traits.spe) <- traits.spe$species
traits.spe <- select(traits.spe, -3)
traits.spe <- as.data.frame(traits.spe)
traits.spe <- traits.spe[,-1]
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
View(traits.spe)
spe <- wide
#for traits species should be rows, traits cols
traits.spe <- select(traits.sp, -sd)
traits.spe <- pivot_wider(traits.spe, names_from = Trait, values_from = mean)
traits.spe <- select(traits.spe, 1, 3,5, 9, 11, 13, 14)
traits.spe <- rename(traits.spe, species = X.1)
View(traits.spe)
env4 <- select(cov, uniID, 3, 4, 5,12, 13, 17, 23, 29, 34)
env4$Microsite <- as.factor(env4$Microsite)
naveg <- env4[is.na(env4$veg..height),]
#make a vector of NA values
naveg <- naveg$uniID
`%!in%` <- Negate(`%in%`)
#remove those NA rows from the species table
spe <- spe[spe$uniID %!in% naveg, ]
row.names(env4) <- env4$uniID
env4 <- env4[,-1]
row.names(spe) <- spe$uniID
spe <- select(spe, -1, -2)
row.names(traits.spe) <- traits.spe$species
traits.spe <- select(traits.spe, -species)
traits.spe <- select(traits.spe, -species)
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
library(ade4)
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
View(traits.spe)
traits.spe <- select(traits.spe, -species)
traits.spe <- as.data.frame(traits.spe) %>% ungroup()
traits.spe <- select(traits.spe, -species)
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
View(env4)
env4 <- select(cov, uniID, 3, 4, 5,12, 13, 17, 23, 29, 34)
env4$Microsite <- as.factor(env4$Microsite)
naveg <- env4[is.na(env4$veg..height),]
#make a vector of NA values
naveg <- naveg$uniID
`%!in%` <- Negate(`%in%`)
#remove those NA rows from the species table
spe <- spe[spe$uniID %!in% naveg, ]
env4 <- env4[env4$uniID %!in% naveg, ]
spe <- wide
#for traits species should be rows, traits cols
traits.spe <- select(traits.sp, -sd)
traits.spe <- pivot_wider(traits.spe, names_from = Trait, values_from = mean)
traits.spe <- select(traits.spe, 1, 3,5, 9, 11, 13, 14)
traits.spe <- rename(traits.spe, species = X.1)
row.names(traits.spe) <- traits.spe$species
traits.spe <- as.data.frame(traits.spe) %>% ungroup()
traits.spe <- select(traits.spe, -species)
env4 <- select(cov, uniID, 3, 4, 5,12, 13, 17, 23, 29, 34)
env4$Microsite <- as.factor(env4$Microsite)
naveg <- env4[is.na(env4$veg..height),]
#make a vector of NA values
naveg <- naveg$uniID
`%!in%` <- Negate(`%in%`)
#remove those NA rows from the species table
spe <- spe[spe$uniID %!in% naveg, ]
env4 <- env4[env4$uniID %!in% naveg, ]
row.names(env4) <- env4$uniID
env4 <- env4[,-1]
row.names(spe) <- spe$uniID
spe <- select(spe, -1, -2)
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
four.comb.ants.adj
plot(four.comb.ants.adj, alpha = 0.05, stat = "D2")
plot(four.comb.ants.adj, alpha = 0.06, stat = "D2")
plot(four.comb.ants.adj, alpha = 0.5, stat = "D2")
library(mvabund)
fit <- traitglm(spe, env4, traits.spe)
fit$fourth #notice LASSO penalty has shrunk many interactions to zero
library(lattice)
a        = max( abs(fit$fourth.corner) )
colort   = colorRampPalette(c("blue","white","red"))
plot.4th = levelplot(t(as.matrix(fit$fourth.corner)), xlab="Environmental Variables",
ylab="Species traits", col.regions=colort(100), at=seq(-a, a, length=100),
scales = list( x= list(rot = 45)))
print(plot.4th)
anova(fit, nBoot = 10)
anova(fit, nBoot = 99)
View(spe)
fit <- traitglm(spe, env4, traits.spe, method = "glm1path")
fit$fourth #notice LASSO penalty has shrunk many interactions to zero
a        = max( abs(fit$fourth.corner) )
colort   = colorRampPalette(c("blue","white","red"))
plot.4th = levelplot(t(as.matrix(fit$fourth.corner)), xlab="Environmental Variables",
ylab="Species traits", col.regions=colort(100), at=seq(-a, a, length=100),
scales = list( x= list(rot = 45)))
print(plot.4th)
fit
spe.bin <- spe
spe.bin[spe.bin < 1] <- 1
View(spe.bin)
spe.bin <- spe
spe.bin[spe.bin > 1] <- 1
four.comb.ants.adj <- fourthcorner(env4, spe.bin,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
four.comb.ants.adj
fit <- traitglm(spe.bin, env4, traits.spe,family = "binomial", method = "glm1path")
fit$fourth #notice LASSO penalty has shrunk many interactions to zero
a        = max( abs(fit$fourth.corner) )
colort   = colorRampPalette(c("blue","white","red"))
plot.4th = levelplot(t(as.matrix(fit$fourth.corner)), xlab="Environmental Variables",
ylab="Species traits", col.regions=colort(100), at=seq(-a, a, length=100),
scales = list( x= list(rot = 45)))
print(plot.4th)
summary(fit)
four.comb.ants.adj <- fourthcorner(env4, spe,
traits.spe, modeltype = 6, p.adjust.method.G = "none",
p.adjust.method.D = "fdr", nrepet = 999)
plot(four.comb.ants.adj, alpha = 0.05, stat = "G")
plot(four.comb.ants.adj, alpha = 0.05, stat = "D2")
four.comb.ants.adj
fit <- traitglm(spe, env4, traits.spe)
summary(fit)
fit <- traitglm(spe.bin, env4, traits.spe,family = "binomial")
summary(fit)
library(betapart)
install.packages("betapart")
library(betapart)
library(dplyr)
library(tidyr)
library(ggplot2)
library(performance)
library(glmmTMB)
library(ade4)
library(nlme)
library(ape)
data(ceram.s)
View(ceram.s)
data(ceram.n)
View(ceram.n)
View(spe.bin)
spe.bin.core <- betapart.core(spe.bin)
spe.bin.multi <- betapart.multi(spe.bin)
spe.bin.multi <- beta.multi(spe.bin)
spe.bin.samp <- beta.sample(spe.bin.core, sites = 9, samples = 100)
dist.s <- spe.bin.samp$sampled.values
plot(density(dist.s$beta.SOR), xlim=c(0,0.8), ylim=c(0, 19), xlab="Beta diversity", main="", lwd=3)
lines(density(dist.s$beta.SNE), lty=1, lwd=2)
lines(density(dist.s$beta.SIM), lty=2, lwd=2)
lines(density(dist.n$beta.SOR), col=‘grey60’, lwd=3)
lines(density(dist.n$beta.SOR), col="grey60", lwd=3)
pair.s <- beta.pair(spe.bin)
dist.s <- spe.bin.samp$sampled.values
plot(hclust(pair.s$beta.sim, method="average"), hang=-1, main="", sub="", xlab="")
pair.s <- beta.pair(spe.bin)
plot(hclust(pair.s$beta.sim, method="average"), hang=-1, main="", sub="", xlab="")
?betapart
pair.s <- beta.pair(spe.bin, index.family = "sorensen")
dist <- beta.pair(spe.bin, index.family = "sorensen")
dist[[1]]
bd <- betadisper(dist[[3]], env4$Microsite)
bd <- vegan::betadisper(dist[[3]], env4$Microsite)
summary(bd)
plot(bd)
boxplot(bd)
anova(bd)
bd <- vegan::betadisper(dist[[3]], env4$shrub.site)
plot(bd)
boxplot(bd)
anova(bd)
plot(env4$dry.veg.percent, dist[[3]])
dist[[3]]
sor <- dist[[3]]
sor <- as.matrix(sor)
View(sor)
