metadata$H <- H
metadata$Simpson <- simp
metadata$Species <- S
metadata$Even <- J
write.csv(metadata, "Clean Data/ants_clean.csv")
write.csv(wide, "Clean Data/wide_clean.csv")
write.csv(veg, "Clean Data/veg_clean.csv")
ants <- read.csv("Clean Data/ants_cleaned.csv")
ants <- read.csv("Clean Data/ants_clean.csv")
m1 <- glm(abun ~ Microsite, family = "poisson", data = ants)
summary(m1)
m1 <- glm(S ~ Microsite, family = "poisson", data = ants)
summary(m1)
View(ants)
m1 <- glm(abun ~ Microsite + month + dry.veg.percent, family = "poisson", data = ants)
summary(m1)
m1 <- glm(S ~ Microsite + month + dry.veg.percent, family = "poisson", data = ants)
summary(m1)
m1 <- glm(abun ~ Microsite + month + dry.veg.percent, family = "poisson", data = ants)
summary(m1)
m1 <- glm(abun ~ Microsite + month + dry.veg.percent + dominant.type, family = "poisson", data = ants)
summary(m1)
library(dplyr)
library(ggplot2)
ants <- read.csv("Clean Data/ants_clean.csv")
m1 <- glm(abun ~ site + Microsite + month + dry.veg.percent + dominant.type, family = "poisson", data = ants)
m1 <- glm(abun ~ Site + Microsite + month + dry.veg.percent + dominant.type, family = "poisson", data = ants)
summary(m1)
m1 <- glm(abun ~ Site + Microsite + month + dry.veg.percent, family = "poisson", data = ants)
summary(m1)
library(MASS)
m1 <- glm.nb(abun ~ Site + Microsite + month + dry.veg.percent, family = "nbinom2", data = ants)
summary(m1)
m1 <- glm.nb(abun ~ Site + Microsite + month + dry.veg.percent, data = ants)
summary(m1)
m1 <- glm.nb(abun ~ Site + Microsite + dry.veg.percent, data = ants)
summary(m1)
m1 <- glm.nb(abun ~ Microsite + dry.veg.percent, data = ants)
summary(m1)
ggplot(veg, aes(Microsite, dry.veg.percent)) + geom_violin() + geom_boxplot(width = 0.05)
ggplot(veg, aes(Microsite, dry.veg.percent)) + geom_violin() + geom_boxplot(width = 0.05) + theme(axis.text.x=element_text(angle=90, vjust=.5)) + ylab("RII") + xlab("")  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(veg, aes(Microsite, dry.veg.percent)) + geom_violin() + geom_boxplot(width = 0.05) + theme(axis.text.x=element_text(angle=90, vjust=.5)) + ylab("Percent Cover Vegetation") + xlab("")  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
pca1<- prcomp(var)
wide <- read.csv("Clean Data/wide_clean.csv")
View(veg)
View(veg)
var <- select(veg, sampleID, 4, 9, 10:14, 16)
var <- dplyr::select(veg, sampleID, 4, 9, 10:14, 16)
veg <- read.csv("Clean Data/veg_clean.csv")
View(veg)
var <- dplyr::select(veg, sampleID, 5, 11:15, 17)
View(ants)
var <- dplyr::select(ants, sampleID,1, 5, 11:15, 17)
var <- dplyr::select(ants,1, 5, 11:15, 17)
row.names(var) <- var$X
var <- select(var, -X)
var <- dplyr::select(var, -X)
pca1<- prcomp(var)
ants <- read.csv("Clean Data/ants_clean.csv")
var <- dplyr::select(ants,1, 11:15, 17)
row.names(var) <- var$X
var <- dplyr::select(var, -X)
pca1<- prcomp(var)
View(var)
veg$veg..height[is.na(veg$veg..height)] <- 0
pca1<- prcomp(var)
ants$veg..height[is.na(ants$veg..height)] <- 0
pca1<- prcomp(var)
var$veg..height[is.na(var$veg..height)] <- 0
pca1<- prcomp(var)
summary(pca1)
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE)
library(ggfortify)
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE)
cov <- select(ants, 1, 2, 3, 5)
cov <- dplyr::select(ants, 1, 2, 3, 5)
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE)
pca1<- prcomp(var, scale. = TRUE)
summary(pca1)
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE)
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE, scale = 0)
pca1<- prcomp(var)
summary(pca1)
pca1
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE, scale = 0)
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE, scale = 1)
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE, scale = 0)
autoplot(pca1, data = cov, colour = "Microsite", loadings = TRUE, loadings.label = TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
library(vegan)
veg <- read.csv("raw data/vegetation.csv")
str(veg)
#this is a check for typos in factor names
unique(veg$month)
unique(veg$Method)
unique(veg$Microsite)
unique(veg$Site)
#need to fill in the field microsite field - field micro is the labels on the vials and corresponds to
#the insect data, but Microsite is the actual microsite - techs labelled shrub/open at shrubless sites to aid organization
veg$field.micro
veg <- veg %>% mutate(field.micro = ifelse(nchar(veg$field.micro) ==0, paste(veg$Microsite, veg$Rep), field.micro))
veg$field.micro <- gsub(" ","", veg$field.micro)
#loading pitfall data from another folder, this is ongoing so pulling direct from excel
library(XLConnect)
ants <- readWorksheetFromFile("D:/Research/Projects/prey_item_survey/Raw Data/Arthropod_data.xlsx", "Pitfalls")
unique(ants$microsite)
unique(ants$site)
unique(ants$month)
unique(ants$rep)
ants <- filter(ants, microsite != "NA" & microsite != "nolabel")
ants <- filter(ants, month != "NA")
ants <- filter(ants, site != "NA")
ants <- filter(ants, rep != "NA")
#I also want to filter out blank IDs & alates, but at this stage so I can sum easily
ants <- filter(ants, highest.rtu != "NA")
ants <- filter(ants, highest.rtu != "alate")
#need to extract a list of trap ID that counts insects but no ants
#making a unique identifier to facilitate joining tables
ants$uniID <- paste(ants$site, ants$month, ants$microsite, ants$rep)
ants$uniID <- gsub(" ","", ants$uniID)
reps <- unique(ants$uniID)
#analyze ants only
ants <- ants %>% filter(family == "Formicidae")
sum(ants$quantity, na.rm = TRUE)
View(ants)
unique(ants$genus)
ants$genus <- gsub(" ", "", ants$genus)
unique(ants$genus)
library(dplyr)
library(ggplot2)
library(tidyr)
library(vegan)
veg <- read.csv("raw data/vegetation.csv")
str(veg)
#this is a check for typos in factor names
unique(veg$month)
unique(veg$Method)
unique(veg$Microsite)
unique(veg$Site)
#need to fill in the field microsite field - field micro is the labels on the vials and corresponds to
#the insect data, but Microsite is the actual microsite - techs labelled shrub/open at shrubless sites to aid organization
veg$field.micro
veg <- veg %>% mutate(field.micro = ifelse(nchar(veg$field.micro) ==0, paste(veg$Microsite, veg$Rep), field.micro))
veg$field.micro <- gsub(" ","", veg$field.micro)
#loading pitfall data from another folder, this is ongoing so pulling direct from excel
library(XLConnect)
ants <- readWorksheetFromFile("D:/Research/Projects/prey_item_survey/Raw Data/Arthropod_data.xlsx", "Pitfalls")
unique(ants$microsite)
unique(ants$site)
unique(ants$month)
unique(ants$rep)
#need to filter out NAs in these groups - I must have left them blank
#filter here so they don't count as zeroes
ants <- filter(ants, microsite != "NA" & microsite != "nolabel")
ants <- filter(ants, month != "NA")
ants <- filter(ants, site != "NA")
ants <- filter(ants, rep != "NA")
#I also want to filter out blank IDs & alates, but at this stage so I can sum easily
ants <- filter(ants, highest.rtu != "NA")
ants <- filter(ants, highest.rtu != "alate")
#need to extract a list of trap ID that counts insects but no ants
#making a unique identifier to facilitate joining tables
ants$uniID <- paste(ants$site, ants$month, ants$microsite, ants$rep)
ants$uniID <- gsub(" ","", ants$uniID)
reps <- unique(ants$uniID)
#analyze ants only
ants <- ants %>% filter(family == "Formicidae")
sum(ants$quantity, na.rm = TRUE)
unique(ants$genus)
ants$genus <- gsub(" ", "", ants$genus)
unique(ants$highest.rtu)
unique(ants$genus)
#ants <- filter(ants, site == "PaPl" | site == "CaS" | site == "Lok" | site == "SemiT" | site == "SiCr")
ants.ag <- dplyr::select(ants, uniID, genus, quantity)
#collapse and sum ants within species within rep
ants.ag <- ants.ag %>% group_by(uniID, genus) %>% summarise(quantity = sum(quantity))
#check to make sure everything adds correctin
sum(ants.ag$quantity, na.rm = TRUE)
wide <- ants.ag %>% spread(genus, quantity)
#replace NA with zero
wide[is.na(wide)] <- 0
metadata <- veg
metadata$uniID <- paste(metadata$Site, metadata$month, metadata$field.micro)
metadata$uniID <- gsub(" ","", metadata$uniID)
metadata <- metadata %>% filter(uniID %in% reps)
row.names(metadata) <- metadata$uniID
zeroes <- anti_join(metadata, wide, by = "uniID")
#150 without ants seems like a lot but ok
#ahh that was due to NAs 44 is much more realistic
str(zeroes)
zeroes <- select(zeroes, "uniID")
wide <- bind_rows(wide, zeroes)
wide[is.na(wide)] <- 0
metadata <- filter(metadata, uniID != "NA")
wide <- filter(wide, uniID != "NA")
metadata <- metadata[match(wide$uniID, metadata$uniID),]
all.equal(metadata$uniID, wide$uniID)
row.names(wide) <- wide$uniID
wide <- wide %>% ungroup(uniID) %>% select(-uniID)
metadata$abun <- apply(wide, 1, sum)
#check for total
sum(metadata$abun)
H <- diversity(wide)
simp <- diversity(wide, "simpson")
S <- specnumber(wide)
J <- H/log(S)
metadata$H <- H
metadata$Simpson <- simp
metadata$Species <- S
metadata$Even <- J
write.csv(metadata, "Clean Data/ants_clean.csv")
write.csv(wide, "Clean Data/wide_clean.csv")
write.csv(veg, "Clean Data/veg_clean.csv")
library(dplyr)
library(ggplot2)
library(MASS)
ants <- read.csv("Clean Data/ants_clean.csv")
wide <- read.csv("Clean Data/wide_clean.csv")
veg <- read.csv("Clean Data/veg_clean.csv")
m1 <- glm.nb(abun ~ Microsite + dry.veg.percent, data = ants)
summary(m1)
m2<- glm(S ~ Microsite + dry.veg.percent, data = ants)
summary(m2)
m2<- glm(S ~ Microsite + dry.veg.percent + site, data = ants)
m2<- glm(S ~ Microsite + dry.veg.percent + Site, data = ants)
summary(m2)
m1 <- glm.nb(abun ~ Microsite + dry.veg.percent + veg..height, data = ants)
summary(m1)
m1 <- glm.nb(abun ~ Microsite + dry.veg.percent + Site data = ants)
m1 <- glm.nb(abun ~ Microsite + dry.veg.percent + Site, data = ants)
summary(m1)
m1 <- glm(abun ~ Microsite + dry.veg.percent + Site, data = ants)
summary(m1)
m1 <- glm(abun ~ Microsite + dry.veg.percent + Site, family = "poisson", data = ants)
summary(m1)
m3 <- glm(H ~ ~ Microsite + dry.veg.percent, data = ants)
m3 <- glm(H ~ Microsite + dry.veg.percent, data = ants)
summary(m3)
shapiro.test(resid(m3))
a1 <- anosim(wide, ants$Microsite, permutations = 999, distance = "bray")
summary(a1)
m1.1 <- glm.nb(abun ~ Microsite * dry.veg.percent + Site, data = ants)
summary(m1)
summary(m1.1)
m1.1 <- glm.nb(abun ~ Microsite * dry.veg.percent, data = ants)
summary(m1.1)
m2<- glm(S ~ Microsite + dry.veg.percent, data = ants)
summary(m2)
m2.2<- glm(S ~ Microsite + dry.veg.percent, data = ants)
summary(m2.2)
m2.2<- glm(S ~ Microsite * dry.veg.percent, data = ants)
summary(m2.2)
library(performance)
check_overdispersion(m2.2)
m2.2<- glm(S ~ Microsite * dry.veg.percent, family = "poisson", data = ants)
summary(m2.2)
check_overdispersion(m2.2)
m3.3 <- glm(H ~ Microsite + dry.veg.percent, data = ants)
m3.3 <- glm(H ~ Microsite * dry.veg.percent, data = ants)
summary(m3.3)
shapiro.test(resid(m3.3))
library(sjPlot)
plot_model(m2.2, type = pred)
plot_model(m2.2, type = "pred")
m2.2<- glm(S ~ Microsite * dry.veg.percent, family = "poisson", data = ants)
plot_model(m2.2, type = "pred")
plot_model(m2.2, type = "int")
str(ants)
plot_model(m1.1, type = "int")
plot_model(m3.3, type = "int")
plot_model(m1.1, type = "int")
m2.2<- glm(S ~ dry.veg.percent * Microsite, family = "poisson", data = ants)
summary(m2.2)
plot_model(m2.2, type = "int")
m3 <- glm(H ~ Microsite + dry.veg.percent + month, data = ants)
summary(m3)
m3.3 <- glm(H ~ Microsite * dry.veg.percent + month, data = ants)
summary(m3.3)
m3.3 <- glm(H ~ Microsite * dry.veg.percent + Site, data = ants)
summary(m3.3)
shapiro.test(resid(m3.3))
library(glmmTMB)
m2.2<- glm(S ~ dry.veg.percent * Microsite + Site, family = "poisson", data = ants)
summary(m2.2)
m2.m22 <- glmmTMB(S ~ dry.veg.percent * Microsite + (1|Site), family = "poisson", data = ants
m2.m22 <- glmmTMB(S ~ dry.veg.percent * Microsite + (1|Site), family = "poisson", data = ants)
m2.m22 <- glmmTMB(S ~ dry.veg.percent * Microsite + (1|Site), family = "poisson", data = ants)
summary(m2.m22)
m1.m11 <- glmmTMB(abun ~ dry.veg.percent * Microsite + (1|Site), family = "poisson", data = ants)
summary(m1.m11)
m2.m22 <- glmmTMB(S ~ dry.veg.percent + Microsite + (1|Site), family = "poisson", data = ants)
summary(m2.m22)
m1.m11 <- glmmTMB(abun ~ dry.veg.percent + Microsite + (1|Site), family = "poisson", data = ants)
summary(m1.m11)
check_overdispersion(m1.m11)
m1.mnb <- glmmTMB(abun ~ dry.veg.percent + Microsite + (1|Site), family = "nbinom2", data = ants)
summary(m1.mnb)
library(dplyr)
library(ggplot2)
library(MASS)
library(performance)
m1 <- glm.nb(abun ~ Microsite + dry.veg.percent + Site, data = ants)
summary(m1)
anova(m1)
aov(m1)
summary(m1)
aov(m1)
m2.2<- glm(S ~ dry.veg.percent + Microsite + Site, family = "poisson", data = ants)
summary(m2.2)
aov(m2.2)
aov(m2.2)
aov(m2.2)
car::Anova(m2.2)
m1 <- glm.nb(abun ~ Microsite + dry.veg.percent + Site, data = ants)
summary(m1)
car::Anova(m1)
summary(m1)
a1 <- anosim(wide, ants$Microsite, permutations = 999, distance = "bray")
library(vegan)
a1 <- anosim(wide, ants$Microsite, permutations = 999, distance = "bray")
summary(a1)
library(dplyr)
library(ggplot2)
library(tidyr)
library(vegan)
veg <- read.csv("raw data/vegetation.csv")
str(veg)
#this is a check for typos in factor names
unique(veg$month)
unique(veg$Method)
unique(veg$Microsite)
unique(veg$Site)
ants <- read.csv("D:/Research/Projects/prey_item_survey/arth_long.csv")
ants <- read.csv("D:/Research/Projects/prey_item_survey/Clean Data/arth_long.csv")
ants <- filter(ants, family == "Formicidae")
library(dplyr)
ants <- filter(ants, family == "Formicidae")
unique(ants$microsite)
unique(ants$site)
unique(ants$month)
unique(ants$rep)
ants <- filter(ants, microsite != "NA" & microsite != "nolabel")
ants <- filter(ants, month != "NA")
ants <- filter(ants, site != "NA")
ants <- filter(ants, rep != "NA")
#I also want to filter out blank IDs & alates, but at this stage so I can sum easily
ants <- filter(ants, highest.rtu != "NA")
ants <- filter(ants, highest.rtu != "alate")
#need to extract a list of trap ID that counts insects but no ants
#making a unique identifier to facilitate joining tables
ants$uniID <- paste(ants$site, ants$month, ants$microsite, ants$rep)
ants$uniID <- gsub(" ","", ants$uniID)
reps <- unique(ants$uniID)
unique(ants$highest.rtu)
#collapse and sum ants within species within rep
ants.ag <- ants.ag %>% group_by(uniID, highest.rtu) %>% summarise(quantity = sum(quantity))
#ants <- filter(ants, site == "PaPl" | site == "CaS" | site == "Lok" | site == "SemiT" | site == "SiCr")
ants.ag <- dplyr::select(ants, uniID, highest.rtu, quantity)
#collapse and sum ants within species within rep
ants.ag <- ants.ag %>% group_by(uniID, highest.rtu) %>% summarise(quantity = sum(quantity))
#check to make sure everything adds correctin
sum(ants.ag$quantity, na.rm = TRUE)
wide <- ants.ag %>% spread(highest.rtu, quantity)
library(tidyr)
wide <- ants.ag %>% spread(highest.rtu, quantity)
#replace NA with zero
wide[is.na(wide)] <- 0
metadata <- veg
metadata$uniID <- paste(metadata$Site, metadata$month, metadata$field.micro)
metadata$uniID <- gsub(" ","", metadata$uniID)
metadata <- metadata %>% filter(uniID %in% reps)
row.names(metadata) <- metadata$uniID
zeroes <- anti_join(metadata, wide, by = "uniID")
#150 without ants seems like a lot but ok
#ahh that was due to NAs 44 is much more realistic
#now it is zero without ants and that seems unlikely...
str(zeroes)
zeroes <- select(zeroes, "uniID")
wide <- bind_rows(wide, zeroes)
wide[is.na(wide)] <- 0
metadata <- filter(metadata, uniID != "NA")
wide <- filter(wide, uniID != "NA")
metadata <- metadata[match(wide$uniID, metadata$uniID),]
all.equal(metadata$uniID, wide$uniID)
row.names(wide) <- wide$uniID
wide <- wide %>% ungroup(uniID) %>% select(-uniID)
library(dplyr)
library(ggplot2)
library(tidyr)
library(vegan)
veg <- read.csv("raw data/vegetation.csv")
ants <- read.csv("D:/Research/Projects/prey_item_survey/Clean Data/arth_long.csv")
ants <- filter(ants, family == "Formicidae")
unique(ants$microsite)
unique(ants$site)
unique(ants$month)
unique(ants$rep)
ants <- filter(ants, microsite != "NA" & microsite != "nolabel")
ants <- filter(ants, month != "NA")
ants <- filter(ants, site != "NA")
ants <- filter(ants, rep != "NA")
#I also want to filter out blank IDs & alates, but at this stage so I can sum easily
ants <- filter(ants, highest.rtu != "NA")
ants <- filter(ants, highest.rtu != "alate")
#need to extract a list of trap ID that counts insects but no ants
#making a unique identifier to facilitate joining tables
ants$uniID <- paste(ants$site, ants$month, ants$microsite, ants$rep)
ants$uniID <- gsub(" ","", ants$uniID)
reps <- unique(ants$uniID)
unique(ants$highest.rtu)
#ants <- filter(ants, site == "PaPl" | site == "CaS" | site == "Lok" | site == "SemiT" | site == "SiCr")
ants.ag <- dplyr::select(ants, uniID, highest.rtu, quantity)
#collapse and sum ants within species within rep
ants.ag <- ants.ag %>% group_by(uniID, highest.rtu) %>% summarise(quantity = sum(quantity))
#check to make sure everything adds correctin
sum(ants.ag$quantity, na.rm = TRUE)
wide <- ants.ag %>% spread(highest.rtu, quantity)
#replace NA with zero
wide[is.na(wide)] <- 0
View(wide)
metadata <- veg
metadata$uniID <- paste(metadata$Site, metadata$month, metadata$field.micro)
metadata$uniID <- gsub(" ","", metadata$uniID)
row.names(metadata) <- metadata$uniID
zeroes <- anti_join(metadata, wide, by = "uniID")
View(zeroes)
View(wide)
View(wide)
View(metadata)
metadata <- veg
metadata$uniID <- paste(metadata$Site, metadata$month, metadata$field.micro)
metadata$uniID <- gsub(" ","", metadata$uniID)
View(metadata)
#I made clean metadata with identifiers and the correct microsite in the prey item project already
#just bring in that csv and drop the arth data
metadata <- read.csv("D:/Research/Projects/prey_item_survey/arth_clean.csv")
#I made clean metadata with identifiers and the correct microsite in the prey item project already
#just bring in that csv and drop the arth data
metadata <- read.csv("D:/Research/Projects/prey_item_survey/Clean Data/arth_clean.csv")
View(metadata)
row.names(metadata) <- metadata$uniID
zeroes <- anti_join(metadata, wide, by = "uniID")
zeroes <- select(zeroes, "uniID")
wide <- bind_rows(wide, zeroes)
wide[is.na(wide)] <- 0
metadata <- filter(metadata, uniID != "NA")
metadata <- metadata[match(wide$uniID, metadata$uniID),]
all.equal(metadata$uniID, wide$uniID)
metadata$abun <- apply(wide, 1, sum)
row.names(wide) <- wide$uniID
wide <- wide %>% ungroup(uniID) %>% select(-uniID)
metadata$abun <- apply(wide, 1, sum)
#check for total
sum(metadata$abun)
H <- diversity(wide)
simp <- diversity(wide, "simpson")
S <- specnumber(wide)
J <- H/log(S)
metadata$H <- H
metadata$Simpson <- simp
metadata$Species <- S
metadata$Even <- J
write.csv(metadata, "Clean Data/ants_clean.csv")
write.csv(wide, "Clean Data/wide_clean.csv")
write.csv(veg, "Clean Data/veg_clean.csv")
library(dplyr)
library(ggplot2)
library(MASS)
library(performance)
ants <- read.csv("Clean Data/ants_clean.csv")
wide <- read.csv("Clean Data/wide_clean.csv")
veg <- read.csv("Clean Data/veg_clean.csv")
m1 <- glm.nb(abun ~ Microsite + dry.veg.percent + Site, data = ants)
summary(m1)
car::Anova(m1)
summary(m1)
m2<- glm(S ~ Microsite + dry.veg.percent, data = ants)
View(ants)
m2<- glm(Species ~ Microsite + dry.veg.percent, data = ants)
summary(m2)
m2<- glm(Species ~ dry.veg.percent + Microsite + Site, family = "poisson", data = ants)
summary(m2)
check_overdispersion(m2)
aov(m2)
car::Anova(m2)
m2<- glm(Species ~ dry.veg.percent + Microsite + Site + month, family = "poisson", data = ants)
summary(m2)
m2<- glm(Species ~ dry.veg.percent + Microsite * Site + month, family = "poisson", data = ants)
summary(m2)
car::Anova(m2)
m2.m22 <- glmmTMB(S ~ dry.veg.percent + Microsite + (1|Site), family = "poisson", data = ants)
library(glmmTMB)
m2.m22 <- glmmTMB(S ~ dry.veg.percent + Microsite + (1|Site), family = "poisson", data = ants)
summary(m2.m22)
m2.m22 <- glmmTMB(Species ~ dry.veg.percent + Microsite + (1|Site), family = "poisson", data = ants)
summary(m2.m22)
a1 <- anosim(wide, ants$Microsite, permutations = 999, distance = "bray")
summary(a1)
c <- cca(wide, ants$Microsite)
c <- cca(wide ~ ants$Microsite)
summary(c)
anova.cca(c)
c <- cca(wide ~ ants$Microsite + ants$dry.veg.percent)
summary(c)
anova.cca(c)
anova(c)
anova(c, by = "margin")
anova(c, by = "terms")
